name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}

  build-windows:
    needs: create-release
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.19'
          check-latest: true

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install Wails
        run: go install github.com/wailsapp/wails/v2/cmd/wails@latest

      - name: Create .env file
        run: |
          echo "MASTER_PASSWORD=${{ secrets.MASTER_PASSWORD }}" > .env
        shell: powershell

      - name: Build for Windows
        run: |
          ./build.ps1
        shell: powershell
        env:
          MASTER_PASSWORD: ${{ secrets.MASTER_PASSWORD }}

      - name: Package Windows build
        run: |
          # 创建打包目录
          mkdir -p release
          # 复制生成的可执行文件和资源
          cp -r build/bin/* release/
          # 创建 ZIP 文件
          Compress-Archive -Path release/* -DestinationPath Euthenticator-windows-${{ github.ref_name }}.zip
        shell: powershell

      - name: Upload Windows build
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./Euthenticator-windows-${{ github.ref_name }}.zip
          asset_name: Euthenticator-windows-${{ github.ref_name }}.zip
          asset_content_type: application/zip

  build-macos:
    needs: create-release
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.19'
          check-latest: true

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install Wails
        run: go install github.com/wailsapp/wails/v2/cmd/wails@latest

      - name: Create .env file
        run: |
          echo "MASTER_PASSWORD=${{ secrets.MASTER_PASSWORD }}" > .env
        shell: bash

      - name: Build for macOS
        run: |
          chmod +x ./build.sh
          ./build.sh
        shell: bash
        env:
          MASTER_PASSWORD: ${{ secrets.MASTER_PASSWORD }}

      - name: Package macOS build
        run: |
          # 创建打包目录
          mkdir -p release
          # 复制生成的 .app 文件和资源
          cp -r build/bin/* release/
          # 创建 DMG 文件
          hdiutil create -volname "Euthenticator" -srcfolder release -ov -format UDZO Euthenticator-macos-${{ github.ref_name }}.dmg

      - name: Upload macOS build
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./Euthenticator-macos-${{ github.ref_name }}.dmg
          asset_name: Euthenticator-macos-${{ github.ref_name }}.dmg
          asset_content_type: application/octet-stream